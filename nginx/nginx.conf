# =============================================================
# Nginx Configuration for Production
# =============================================================

# =============================================================
# Events Block: Configures worker processes and connections
# =============================================================
events {
    # Maximum number of simultaneous connections that can be opened by a worker process
    worker_connections 1024;
}

# =============================================================
# HTTP Block: Main configuration for handling HTTP/HTTPS traffic
# =============================================================
http {
    # Disable server tokens to prevent revealing Nginx version information
    server_tokens off;

    # Set the default character encoding
    charset utf-8;

    # =============================================================
    # HTTP Server: Redirects all HTTP traffic to HTTPS
    # =============================================================
    server {
        # Listen on port 80 (Docker container's internal port)
        listen 80;

        # Define the server name (your subdomain)
        server_name course.ewubd.edu;

        # =============================================================
        # Location Block: Redirect all traffic to HTTPS
        # =============================================================
        location / {
            # Permanent redirect to the same URL but with HTTPS and host port 4443
            return 301 https://$host:4443$request_uri;
        }
    }

    # =============================================================
    # HTTPS Server: Handles secure traffic using SSL certificates
    # =============================================================
    server {
        # Listen on port 443 (Docker container's internal port)
        listen 443 ssl;

        # Define the server name (your subdomain)
        server_name course.ewubd.edu;

        # =============================================================
        # SSL Configuration: Specifies SSL certificate and key
        # =============================================================
        ssl_certificate /etc/nginx/ssl/fullchain.pem;      # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;     # Path to your SSL private key

        # =============================================================
        # SSL Protocols and Ciphers: Define supported protocols and ciphers
        # =============================================================
        ssl_protocols TLSv1.2 TLSv1.3;                      # Supported TLS protocols
        ssl_prefer_server_ciphers on;                        # Prefer server ciphers over client ciphers
        ssl_ciphers "HIGH:!aNULL:!MD5";                      # Define acceptable ciphers

        # =============================================================
        # Proxy Settings: Forward requests to the Python server
        # =============================================================
        location /courseFiles/processFiles/ {
            # Forward requests to the Python server
            proxy_pass http://python_server:3005/;           # 'python_server' is the service name defined in docker-compose.yml

            # Set headers to preserve client information
            proxy_set_header Host $host;                     # Preserve the original Host header
            proxy_set_header X-Real-IP $remote_addr;         # Forward the client's real IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme;      # Forward the original protocol (HTTP/HTTPS)
        }

        # =============================================================
        # Proxy Settings: Forward requests to the MinIO service
        # =============================================================
        location /courseFiles/storage/ {
            # Forward requests to the MinIO service
            proxy_pass http://minio:9000/;                   # 'minio' is the service name defined in docker-compose.yml

            # Set headers to preserve client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # =============================================================
        # Proxy Settings: Forward all other requests to the Next.js app
        # =============================================================
        location /courseFiles/ {
            # Forward all other requests under /courseFiles/ to the Next.js app
            proxy_pass http://app:3000/;                      # 'app' is the service name defined in docker-compose.yml

            # Set headers to preserve client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # =============================================================
        # Static Files Serving: Optionally serve static files directly
        # =============================================================
        location /static/ {
            # Define the directory path to serve static files
            alias /path/to/static/files/;                     # Update this path to your actual static files location

            # Optional: Improve performance by enabling caching
            expires 30d;                                      # Cache static files for 30 days
            add_header Cache-Control "public, no-transform";
        }

        # =============================================================
        # Custom Error Pages
        # =============================================================
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
