# -----------------------------------------
# NGINX Configuration: Basic Setup
# -----------------------------------------
events {
    worker_connections 1024;  # Maximum number of simultaneous connections
}

http {
    server_tokens off;  # Disable server version info in response headers
    charset utf-8;  # Set character encoding for HTTP responses

    # -----------------------------------------
    # HTTP Redirect: Port 4000 to HTTPS with root URL
    # -----------------------------------------
    server {
        listen 4000;
        server_name modules.ewubd.edu;

        # Redirect HTTP to HTTPS (on port 4443)
        location / {
            return 301 https://$host:4443/;  # Redirect all HTTP traffic to HTTPS (port 4443)
        }
    }

    # -----------------------------------------
    # HTTPS Server: Main Application Access at root (/) URL
    # -----------------------------------------
    server {
        listen 4443 ssl;  # Listen on HTTPS port 4443
        server_name modules.ewubd.edu;

        # SSL Configuration (Security settings for HTTPS)
        ssl_certificate /etc/nginx/ssl/fullchain.crt;  # Path to SSL certificate
        ssl_certificate_key /etc/nginx/ssl/key2024.key;  # Path to SSL private key
        ssl_protocols TLSv1.2 TLSv1.3;  # Enable only secure SSL/TLS protocols
        ssl_prefer_server_ciphers on;  # Prefer server ciphers over client ciphers
        ssl_ciphers "HIGH:!aNULL:!MD5";  # Use high-strength ciphers

        # -----------------------------------------
        # Proxy Request to Next.js App (Root URL)
        # -----------------------------------------
        location = / {
            proxy_pass http://nextjs_app:3000/;  # Forward request to Next.js app running on port 3000
            proxy_set_header Host $host;  # Set the correct host header
            proxy_set_header X-Real-IP $remote_addr;  # Set the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original IP
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http/https)
            proxy_set_header X-Forwarded-Host $host:$server_port;  # Set the full host including port (e.g., modules.ewubd.edu:4443)
            proxy_set_header X-Forwarded-Port 4443;  # Forward the port for consistency
        }

        # -----------------------------------------
        # Proxy Request to Next.js App (Main URL)
        # -----------------------------------------
        location / {
            proxy_pass http://nextjs_app:3000/;  # Forward all other requests to the Next.js app
            proxy_set_header Host $host;  # Correct host header for Next.js
            proxy_set_header X-Real-IP $remote_addr;  # Client's IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the client IP
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http/https)
            proxy_set_header X-Forwarded-Host $host:$server_port;  # Ensure X-Forwarded-Host includes port (e.g., modules.ewubd.edu:4443)
            proxy_set_header X-Forwarded-Port 4443;  # Forward the correct port for consistency
        }

        # -----------------------------------------
        # Proxy to Python API (Process Files)
        # -----------------------------------------
        location /processFiles/ {
            proxy_pass http://python_server:3005/;  # Forward requests to the Python server at port 3005
            proxy_set_header Host $host;  # Set the host header for the Python server
            proxy_set_header X-Real-IP $remote_addr;  # Set the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original IP
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http/https)
            proxy_set_header X-Forwarded-Host $host:$server_port;  # Forward the full host including port
            proxy_set_header X-Forwarded-Port 4443;  # Ensure the port forwarding is correct
        }

        # -----------------------------------------
        # Proxy to MinIO Console (Storage Console)
        # -----------------------------------------
        location /storage/console/ {
            proxy_pass http://minio:9001/;  # Forward to MinIO Console at port 9001
            proxy_set_header Host $host;  # Set the host header for MinIO
            proxy_set_header X-Real-IP $remote_addr;  # Set the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original IP
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http/https)
            proxy_set_header X-Forwarded-Host $host:$server_port;  # Set full host including port
            proxy_set_header X-Forwarded-Port 4443;  # Forward the port for consistency
        }

        # -----------------------------------------
        # Proxy to MinIO Object Storage Server
        # -----------------------------------------
        location /storage/server/ {
            proxy_pass http://minio:9000/;  # Forward requests to the MinIO storage server at port 9000
            proxy_set_header Host $host;  # Set the correct host header for MinIO
            proxy_set_header X-Real-IP $remote_addr;  # Set the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the original IP
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http/https)
            proxy_set_header X-Forwarded-Host $host:$server_port;  # Forward full host and port
            proxy_set_header X-Forwarded-Port 4443;  # Ensure the port forwarding is correct for MinIO
        }
    }
}



